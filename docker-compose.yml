services:
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/authdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: secret123
    networks:
      - app-network
    restart: on-failure

  # place-service:
  #   build: ./place-service
  #   container_name: place-service
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - mysql
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/placedb
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: secret123
  #   networks:
  #     - app-network
  review-service:
    build: ./review-service
    container_name: review-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/reviewdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: secret123
    networks:
      - app-network
    restart: on-failure

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret123
      MYSQL_DATABASE: reviewdb
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-psecret123",
        ]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 30s

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
